@model IEnumerable<gfraser4_College_Strike.Models.Member>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
@if (User.IsInRole("Steward") || User.IsInRole("Admin"))
    { 
<p>
    <a asp-action="Create">Create New</a>
</p>
}
<form asp-action="Index">
    <div class="form-horizontal">
        <button class="btn" type="button" data-toggle="collapse" id="filterToggle" data-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search
        </button>
        <div class="collapse @(ViewData["Filtering"])" id="collapseFilter">
            <div class="row well">
                <div class="form-group col-md-4">
                    <label class="control-label col-md-6">Select by Assignment:</label>
                    <div class="col-md-6">
                        @Html.DropDownList("AssignmentID", null, "All Assignments", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label col-md-7">Search Member Name:</label>
                    <div class="col-md-5">
                        @Html.TextBox("SearchStringName", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label col-md-7">Search Phone Number:</label>
                    <div class="col-md-5">
                        @Html.TextBox("SearchStringPhone", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label col-md-7">Search Email:</label>
                    <div class="col-md-5">
                        @Html.TextBox("SearchStringEmail", null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-6">Filter by Position:</label>
                    <div class="col-md-6">
                        @Html.DropDownList("PositionID", null, "All Positions", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-md-4">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-default" />
                        <a asp-action="Index">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    <input type="submit" name="actionButton" value="Member" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Phone" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Email" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Assignment" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" disabled="disabled" value="Position" class="btn btn-link" />
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                @{
                    if (item.imageContent != null && item.imageMimeType.Contains("image"))
                    {
                        string imageBase64 = Convert.ToBase64String(item.imageContent);
                        string imageSrc = string.Format("data:" + item.imageMimeType + ";base64,{0}", imageBase64);
                        <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" style="max-height: 100px; max-width: 120px" class="img-responsive img-rounded" />
                    }
                }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.eMail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Assignment.AssignmentName)
                    </td>
                    <td>
                        @foreach (var p in item.MemberPositions)
                        {
                            @p.Position.Title; <br />
                        }
                    </td>
                    <td>@if (User.IsInRole("Steward") || User.IsInRole("Admin"))
                        {
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> @:|
                        }
                        @if (User.Identity.IsAuthenticated)
                        {
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                        @: | @{<a asp-action="Delete" asp-route-id="@item.ID">Delete</a>}
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>